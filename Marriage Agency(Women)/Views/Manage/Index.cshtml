@section styles{
    <link type="text/css" href="~/Content/jquery.fancybox.css?v=2.1.5" rel="stylesheet" />
}
@using Marriage_Agency_Women_.Models.Characteristics.Files
@model Marriage_Agency_Women_.Models.ManageViewModels.EditViewModel
@{
    IDictionary<string, IList<SelectListItem>> content = (IDictionary<string, IList<SelectListItem>>)ViewBag.PersonalData;
    IList<SelectListItem> activities = content["activities"];
    IList<SelectListItem> alcohols = content["alcohols"];
    IList<SelectListItem> desiredAges = content["desiredAges"];
    IList<SelectListItem> educations = content["educations"];
    IList<SelectListItem> eyeColors = content["eyeColors"];
    IList<SelectListItem> hairColors = content["hairColors"];
    IList<SelectListItem> hobbies = content["hobbies"];
    IList<SelectListItem> internationalPassports = content["internationalPassports"];
    IList<SelectListItem> jobs = content["jobs"];
    IList<SelectListItem> knowledges = content["knowledges"];
    IList<SelectListItem> languages = content["languages"];
    IList<SelectListItem> levels = content["levels"];
    IList<SelectListItem> lifestyles = content["lifestyles"];
    IList<SelectListItem> locations = content["locations"];
    IList<SelectListItem> numbersOfChildren = content["numbersOfChildren"];
    IList<SelectListItem> relationships = content["relationships"];
    IList<SelectListItem> religions = content["religions"];
    IList<SelectListItem> shapes = content["shapes"];
    IList<SelectListItem> smokings = content["smokings"];
}


<style type="text/css">
    .imgBox {
        width: 200px;
        height: 200px;
        opacity: 1.0;
        filter: alpha(opacity=100);
    }

        .imgBox:hover {
            -moz-box-shadow: 0 0 10px #ccc;
            -webkit-box-shadow: 0 0 10px #ccc;
            box-shadow: 0 0 10px #ccc;
            opacity: 0.4;
            filter: alpha(opacity=40);
        }
</style>
<h2>@ViewBag.Title</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
<div>
    <h4>Change your account settings</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>Password:</dt>
        <dd>
            [
            @if (Model.HasPassword)
            {
                @Html.ActionLink("Change your password", "ChangePassword")
            }
            else
            {
                @Html.ActionLink("Create", "SetPassword")
            }
            ]
        </dd>
    </dl>

    @using (Html.BeginForm("Edit", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary("", new { @class = "text-danger" })

        <dl class="dl-horizontal">
            @if (Model.FilePaths.Any(f => f.FileType == FileType.Avatar))
            {
                <dt>
                    Avatar
                </dt>
                <dd>
                    <img src="/Content/Images/@Model.FilePaths.First(f => f.FileType == FileType.Avatar).FileName" alt="avatar" />
                </dd>
            }
        </dl>
        <div class="form-group">
            @Html.Label("New Avatar", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="Avatar" name="upload" />
            </div>
        </div>

        <dl class="dl-horizontal">
            @if (Model.FilePaths.Any(f => f.FileType == FileType.Photo))
            {
                <dt>
                    Photo album
                </dt>
                <dd>
                    @foreach (var photo in Model.FilePaths.Where(p => p.FileType == FileType.Photo).OrderByDescending(p => p.Id))
                    {

                        <a class="fancybox" data-fancybox-group="gallery" href="/Content/Images/@photo.FileName">

                            <img src="/Content/Images/@photo.FileName" alt="@photo.FileName" class="imgBox" />

                        </a>


                    }
                </dd>
            }
        </dl>
        <div class="form-group">
            @Html.Label("Uploading photos", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" multiple id="photoAlbum" name="files" />
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.NameInRoman, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.NameInRoman, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NameInRoman, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Birthday, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.EditorFor(m => m.Birthday, new { @class = "form-control" })
            </div>
            <p>1/1/1990</p>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Location, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.Location, locations, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Religion, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.Religion, religions, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Activity, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.Activity, activities, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Job, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.Job, jobs, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Education, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.Education, educations, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.FirstLanguage, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.FirstLanguage, languages, new { @class = "form-control" })
            </div>
            @Html.LabelFor(m => m.FirstLanguageLevel, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.FirstLanguageLevel, levels, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.SecondLanguage, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.SecondLanguage, languages, new { @class = "form-control" })
            </div>
            @Html.LabelFor(m => m.SecondLanguageLevel, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.SecondLanguageLevel, levels, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ThirdLanguage, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.ThirdLanguage, languages, new { @class = "form-control" })
            </div>
            @Html.LabelFor(m => m.ThirdLanguageLevel, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.ThirdLanguageLevel, levels, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Relationship, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.Relationship, relationships, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Education, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.Education, educations, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.NumberOfChildren, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.NumberOfChildren, numbersOfChildren, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Height, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Height, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Weight, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Weight, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Shape, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.Shape, shapes, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.EyeColor, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.EyeColor, eyeColors, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.HairColor, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.HairColor, hairColors, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Smoking, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.Smoking, smokings, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Alcohol, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.Alcohol, alcohols, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.DesiredAge, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.DesiredAge, desiredAges, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Hobby, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.Hobby, hobbies, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Lifestyle, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.Lifestyle, lifestyles, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Knowledge, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.Knowledge, knowledges, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.PhoneNumber, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.EditorFor(m => m.PhoneNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Skype, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Skype, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Facebook, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Facebook, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Vk, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Vk, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Twitter, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.Twitter, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.InternationalPassport, new { @class = "col-md-2 control-label" })
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.InternationalPassport, internationalPassports, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Сохранить изменения" />
            </div>
        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/jquery.mousewheel-3.0.6.pack.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.fancybox.js?v=2.1.5"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $(".fancybox").fancybox();
        });
    </script>
}
